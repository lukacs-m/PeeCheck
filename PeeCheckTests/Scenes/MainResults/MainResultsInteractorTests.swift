//
//  MainResultsInteractorTests.swift
//  PeeCheck
//
//  Created by Martin Lukacs on 11/03/2019.
//  Copyright (c) 2019 Martin Lukacs. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

@testable import PeeCheck
import XCTest

//class MainResultsInteractorTests: XCTestCase {
//  // MARK: Subject under test
//  
//  var sut: MainResultsInteractor!
//  
//  // MARK: Test lifecycle
//  
//  override func setUp() {
//    super.setUp()
//    setupMainResultsInteractor()
//  }
//  
//  override func tearDown() {
//    super.tearDown()
//  }
//  
//  // MARK: Test setup
//  
//  func setupMainResultsInteractor() {
//    sut = MainResultsInteractor()
//  }
//  
//  // MARK: Test doubles
//  
//  class MainResultsPresentationLogicSpy: MainResultsPresentationLogic {
//    var presentSomethingCalled = false
//    
//    func presentSomething(response: MainResults.Something.Response) {
//      presentSomethingCalled = true
//    }
//  }
//  
//  // MARK: Tests
//  
//  func testDoSomething() {
//    // Given
//    let spy = MainResultsPresentationLogicSpy()
//    sut.presenter = spy
//    let request = MainResults.Something.Request()
//    
//    // When
//    sut.doSomething(request: request)
//    
//    // Then
//    XCTAssertTrue(spy.presentSomethingCalled, "doSomething(request:) should ask the presenter to format the result")
//  }
//}
