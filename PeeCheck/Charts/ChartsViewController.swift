//
//  ChartsViewController.swift
//  PeeCheck
//
//  Created by Martin Lukacs on 10/06/2018.
//  Copyright (c) 2018 Martin Lukacs. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol ChartsDisplayLogic: class
{
    func displaySomething(viewModel: Charts.Something.ViewModel)
}

class ChartsViewController: UITableViewController, ChartsDisplayLogic
{
    var interactor: ChartsBusinessLogic?
    var router: (NSObjectProtocol & ChartsRoutingLogic & ChartsDataPassing)?
    var subviews = [["name": "Record","controler": UIViewController()]]
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = ChartsInteractor()
        let presenter = ChartsPresenter()
        let router = ChartsRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        self.navigationItem.leftItemsSupplementBackButton = true
        self.navigationItem.leftBarButtonItem = splitViewController?.displayModeButtonItem
        doSomething()
    }
    
    // MARK: Do something
    
    //@IBOutlet weak var nameTextField: UITextField!
    
    func doSomething()
    {
        let request = Charts.Something.Request()
        interactor?.doSomething(request: request)
    }
    
    func displaySomething(viewModel: Charts.Something.ViewModel)
    {
        //nameTextField.text = viewModel.name
    }
}

extension ChartsViewController {
    
    override func numberOfSections(in tableView: UITableView) -> Int {
        return 1
    }
    
    override func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        return subviews.count
    }
    
    override func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell
    {
//        let displayedChartPage = subviews[indexPath.row]
        var cell = tableView.dequeueReusableCell(withIdentifier: "ChartsTableviewCell")
        if cell == nil {
            cell = UITableViewCell(style: .value1, reuseIdentifier: "ChartsTableviewCell")
        }
        cell?.textLabel?.text =  "record"
        return cell!
    }
    
    override func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath)
    {
//        let displayedOrder = displayedOrders[indexPath.row]
//        router?.routeToShowOrder(for: displayedOrder.id)

        
        splitViewController?.showDetailViewController(AccountViewController(), sender: nil)
        
    }
}
