//
//  ResultsModels.swift
//  PeeCheck
//
//  Created by Martin Lukacs on 22/04/2019.
//  Copyright (c) 2019 Martin Lukacs. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import RealmSwift

enum MainResults {
    
    struct MicturitionResults {
        var isNight: Bool
        var shortestMicturition: Int
        var longestMicturition: Int
        var averageMicturitionTime: Double
        var totalNumberOfMicturition: Int
        var averageNumberOfMicturition: Double
        var maxNumberOfMicturition: Int
        var minNumberOfMicturition: Int
    }
    
    enum ResultsConclusion {
        case good
        case mediocre
        case horrible
    }
    
    enum TypeOfResults {
        case conclusion
        case day
        case night
        case charts
    }
   
    // MARK: Fetch User data to be displayed

    enum FetchUserData {
        struct Request {}
        
        struct Response {
            var user: User?
            var enoughDaysRecording: Bool
            var data: [String: MicturitionResults]
            var conclusion: [String: String]
        }
        
        struct ViewModel {
            struct DisplayedInformation {
                var title: String
                var shortestMicturition: String
                var longestMicturition: String
                var averageMicturitionTime: String
                var averageNumberOfMicturition: String
                var maxNumberOfMicturition: String
                var minNumberOfMicturition: String
            }
            
            struct DisplayedConclusion {
                var title: String
                var helper: String
                var conclusion: String
            }
            
            struct DisplayedResultElements {
                var type: TypeOfResults
                var micturitionResults: DisplayedInformation?
                var conclusion: DisplayedConclusion?
            }
            
            var user: User?
            var enoughDaysRecording: Bool
            var resultElements: [DisplayedResultElements]
//            var informationToDisplay: [DisplayedInformation]
//            var conclusion: DisplayedConclusion
        }
    }
}
