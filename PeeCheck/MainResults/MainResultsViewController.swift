//
//  MainResultsViewController.swift
//  PeeCheck
//
//  Created by Martin Lukacs on 26/08/2018.
//  Copyright (c) 2018 Martin Lukacs. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainResultsDisplayLogic: class {
  func displayUserData(viewModel: MainResults.FetchUserData.ViewModel)
}

class MainResultsViewController: UIViewController, MainResultsDisplayLogic {
  var interactor: MainResultsBusinessLogic?
  var router: (NSObjectProtocol & MainResultsRoutingLogic & MainResultsDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup() {
    let viewController = self
    let interactor = MainResultsInteractor()
    let presenter = MainResultsPresenter()
    let router = MainResultsRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
  
  // MARK: View lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
  }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        fetchUserData()
    }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func fetchUserData() {
    let request = MainResults.FetchUserData.Request()
    interactor?.fetchUserData(request: request)
  }
  
  func displayUserData(viewModel: MainResults.FetchUserData.ViewModel) {
    //nameTextField.text = viewModel.name
  }
}
