//
//  MainResultsViewController.swift
//  PeeCheck
//
//  Created by Martin Lukacs on 26/08/2018.
//  Copyright (c) 2018 Martin Lukacs. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MainResultsDisplayLogic: class {
  func displayUserData(viewModel: MainResults.FetchUserData.ViewModel)
}

class MainResultsViewController: UIViewController, MainResultsDisplayLogic {
    
    // MARK: - Outlets
    @IBOutlet weak var lblTitle: UILabel!
    @IBOutlet weak var lblConclusion: UILabel!
    @IBOutlet weak var lblTotalNumMiction: UILabel!
    
    // MARK: - Variables
  var interactor: MainResultsBusinessLogic?
  var router: (NSObjectProtocol & MainResultsRoutingLogic & MainResultsDataPassing)?

  // MARK: Object lifecycle
  
  override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
    super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
    setup()
  }
  
  required init?(coder aDecoder: NSCoder) {
    super.init(coder: aDecoder)
    setup()
  }
  
  // MARK: Setup
  
  private func setup() {
    let viewController = self
    let interactor = MainResultsInteractor()
    let presenter = MainResultsPresenter()
    let router = MainResultsRouter()
    viewController.interactor = interactor
    viewController.router = router
    interactor.presenter = presenter
    presenter.viewController = viewController
    router.viewController = viewController
    router.dataStore = interactor
  }
    
    private func setUpUI() {
        self.title = "test"
    }
  
  // MARK: View lifecycle
  
  override func viewDidLoad() {
    super.viewDidLoad()
    setUpUI()
  }
    
//    override func viewWillAppear(_ animated: Bool) {
//        super.viewWillAppear(animated)
//        fetchUserData()
//    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        
        fetchUserData()

    }
  
  // MARK: Do something
  
  //@IBOutlet weak var nameTextField: UITextField!
  
  func fetchUserData() {
    let request = MainResults.FetchUserData.Request()
    interactor?.fetchUserData(request: request)
  }
  
  func displayUserData(viewModel: MainResults.FetchUserData.ViewModel) {
    guard let user = viewModel.user else {
        showAlert(title: "Missing user", message: "Please register your informations for us to be able to process the data. WOuld you like to go to the account page")
        return
    }
    if !viewModel.enoughDaysRecording {
        
    }
  }
    
    // MARK: Error handling
    
    private func showAlert(title: String, message: String) {
        let alertController = UIAlertController(title: title, message: message, preferredStyle: .alert)
        let cancelAction = UIAlertAction(title: "Cancel", style: .cancel, handler: nil)
        let alertAction = UIAlertAction(title: "OK", style: .default) { UIAlertAction in
            self.router?.goToAccountPage()
        }
        alertController.addAction(cancelAction)
        alertController.addAction(alertAction)
        self.present(alertController, animated: false, completion: nil)
    }
}
