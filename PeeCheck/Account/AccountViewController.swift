//
//  AccountViewController.swift
//  PeeCheck
//
//  Created by Martin Lukacs on 30/04/2018.
//  Copyright (c) 2018 Martin Lukacs. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol AccountDisplayLogic: class {
    func displayUserInformation(viewModel: Account.FetchUser.ViewModel)
    func displayDeletedUserInformation(viewModel: Account.DeleteUser.ViewModel)
}

class AccountViewController: UIViewController, AccountDisplayLogic {
    var interactor: AccountBusinessLogic?
    var router: (NSObjectProtocol & AccountRoutingLogic & AccountDataPassing)?
    
    // MARK: Outlets
    
    @IBOutlet weak var lblTitle: UILabel!
    @IBOutlet weak var lblAgeTitle: UILabel!
    @IBOutlet weak var lblAgeData: UILabel!
    @IBOutlet weak var lblGenderTitle: UILabel!
    @IBOutlet weak var lblGenderData: UILabel!
    @IBOutlet weak var btnEdit: UIButton!
    @IBOutlet weak var btnDeleteData: UIButton!
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?) {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup() {
        let viewController = self
        let interactor = AccountInteractor()
        let presenter = AccountPresenter()
        let router = AccountRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    private func setUpUI() {
        self.title = "account_navbar_title".localized()
        lblTitle.text = "account_title".localized()
        lblAgeTitle.text = "account_lbl_age_title".localized()
        lblAgeData.text = "dqs"
        lblGenderTitle.text = "account_lbl_gender_title".localized()
        lblGenderData.text = "qsd"
        btnEdit.setTitle("account_btn_edit".localized(), for: .normal)
        btnDeleteData.setTitle("account_btn_delete".localized(), for: .normal)
    }
    
    // MARK: Routing
    
    override func prepare(for segue: UIStoryboardSegue, sender: Any?) {
        if let scene = segue.identifier {
            let selector = NSSelectorFromString("routeTo\(scene)WithSegue:")
            if let router = router, router.responds(to: selector) {
                router.perform(selector, with: segue)
            }
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        fetchUser()
    }
    
    override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        setUpUI()
    }

}

// MARK: Fetch User information

extension AccountViewController {
    func fetchUser() {
        let request = Account.FetchUser.Request()
        interactor?.fetchUser(request: request)
    }
    
    func displayUserInformation(viewModel: Account.FetchUser.ViewModel) {
        guard let user = viewModel.user else {
            DispatchQueue.main.async {
                self.lblGenderData.text = "None"
                self.lblAgeData.text = "None "
            }
            return
        }
        lblGenderData.text = user.gender != nil ? user.gender?.localized() ?? "" : "None"
        lblAgeData.text = user.age != nil ? "\(user.age ?? 0)" : "None"
    }
}

// MARK: Delete User information

extension AccountViewController {
    
    @IBAction func deleteUserInformationAction(_ sender: Any) {
        let request = Account.DeleteUser.Request()
        interactor?.deleteUser(request: request)
    }
    
    func displayDeletedUserInformation(viewModel: Account.DeleteUser.ViewModel) {
        lblGenderData.text = "None"
        lblAgeData.text = "None"
    }
}
